#include <Wire.h>
#include "Adafruit_AS726x.h"
#include <ezButton.h>

ezButton button(7);  //create ezButton object that attach to pin 7;

//create the object
Adafruit_AS726x ams;

//buffer to hold raw values
uint16_t sensorValues[AS726x_NUM_CHANNELS];

//buffer to hold calibrated values (not used by default in this example)
//float calibratedValues[AS726x_NUM_CHANNELS];

int numReads = 10;
int cont;
float sum;
float average1;
float average2;
float average3;
float conc;

int pinoRed = 9; //PINO DIGITAL UTILIZADO PELO TERMINAL VERMELHO
int pinoGreen = 10; //PINO DIGITAL UTILIZADO PELO TERMINAL VERDE
int pinoBlue = 11; //PINO DIGITAL UTILIZADO PELO TERMINAL AZUL

int val;

//EXEMPLO - http://en.wikipedia.org/wiki/Simple_linear_regression
float x[11] = {0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1};
float y[11] = {0, 0.95, 0.85, 0.76, 0.71, 0.65, 0.52, 0.43, 0.32, 0.22, 0.11};
float lrCoef[2] = {0, 0};

float sum_x = 0;
float sum_y = 0;
float sum_xy = 0;
float sum_xx = 0;

void setup() {
  Serial.begin(9600);
  while(!Serial);
  button.setDebounceTime(50); //set debounce time to 50 milliseconds

  pinMode(pinoRed, OUTPUT); //DEFINE O PINO COMO SAÍDA
  pinMode(pinoBlue, OUTPUT); //DEFINE O PINO COMO SAÍDA
  pinMode(pinoGreen, OUTPUT); //DEFINE O PINO COMO SAÍDA  

  analogWrite(pinoRed, 255); //PINO RECEBE O VALOR
  analogWrite(pinoGreen, 223); //PINO RECEBE O VALOR
  analogWrite(pinoBlue, 0); //PINO RECEBE O VALOR
  delay (10);
  
  //initialize digital pin LED_BUILTIN as an output
  pinMode(LED_BUILTIN, OUTPUT);

  //PRIMEIRA PARTE DO CÓDIGO
  do {
    button.loop();
  } while (!button.isPressed());
  Serial.println("MEASURING THE BLANK VALUE ...");
  Serial.println();

  //begin and make sure we can talk to the sensor
  if(!ams.begin()){
    Serial.println("could not connect to sensor! Please check your wiring.");
    while(1);
  }

  do {
   //read the device temperature
   uint8_t temp = ams.readTemperature();
  
   //ams.drvOn(); //uncomment this if you want to use the driver LED for readings
   ams.startMeasurement(); //begin a measurement
  
   //wait till data is available
   bool rdy = false;
   while(!rdy){
     delay(1000);
     rdy = ams.dataReady();
   }
   //ams.drvOff(); //uncomment this if you want to use the driver LED for readings

   //read the values
   ams.readRawValues(sensorValues);
   //ams.readCalibratedValues(calibratedValues);

   for (int i = 0; i < numReads; i++){
    sum += sensorValues[AS726x_ORANGE];
   }

   Serial.print(" Temp: "); Serial.print(temp);
   //Serial.print(" Violet: "); Serial.print(sensorValues[AS726x_VIOLET]);
   //Serial.print(" Blue: "); Serial.print(sensorValues[AS726x_BLUE]);
   //Serial.print(" Green: "); Serial.print(sensorValues[AS726x_GREEN]);
   //Serial.print(" Yellow: "); Serial.print(sensorValues[AS726x_YELLOW]);
   Serial.print(" Orange: "); Serial.print(sensorValues[AS726x_ORANGE]);
   //Serial.print(" Red: "); Serial.print(sensorValues[AS726x_RED]);
   Serial.println();
   Serial.println();
   cont++;
  } while(cont < numReads); 

   average1 = sum/(numReads*numReads);
   Serial.print(" Orange Blank Average I0 = "); Serial.print(average1);
   cont = 0;
   sum = 0;
 
 y[0] = average1;
 float y0 = y[0];
 for(int j = 0; j < 11; j++){
  y[j] = -log10(y[j]/y0);
 }

 //CHAMA O ALGORITMO DE REGRESSÃO LINEAR
 simpLinReg(x, y, lrCoef, 11);
 Serial.println("");
 Serial.print(" Abs = ");
 Serial.print(lrCoef[0], 4);

 if (lrCoef[1] > 0){
  Serial.print("*Conc + ");
 }
 else{
  Serial.print("*Conc ");
 }
 
 Serial.println(lrCoef[1], 4);

  do {
    button.loop();
  } while (!button.isReleased());
  Serial.println();
  Serial.println("PRESS THE BUTTON AGAIN TO MEASURE THE LIGHT VALUE BEFORE BUBBLING WITH OZONE ...");
  Serial.println();

  //SEGUNDA PARTE DO CÓDIGO
  do {
    button.loop();
  } while (!button.isPressed());

  //begin and make sure we can talk to the sensor
  if(!ams.begin()){
    Serial.println("could not connect to sensor! Please check your wiring.");
    while(1);
  }

  do {
   //read the device temperature
   uint8_t temp = ams.readTemperature();
  
   //ams.drvOn(); //uncomment this if you want to use the driver LED for readings
   ams.startMeasurement(); //begin a measurement
  
   //wait till data is available
   bool rdy = false;
   while(!rdy){
     delay(1000);
     rdy = ams.dataReady();
   }
   //ams.drvOff(); //uncomment this if you want to use the driver LED for readings

   //read the values
   ams.readRawValues(sensorValues);
   //ams.readCalibratedValues(calibratedValues);

   for (int l = 0; l < numReads; l++){
    sum += sensorValues[AS726x_ORANGE];
   }

   Serial.print(" Temp: "); Serial.print(temp);
   //Serial.print(" Violet: "); Serial.print(sensorValues[AS726x_VIOLET]);
   //Serial.print(" Blue: "); Serial.print(sensorValues[AS726x_BLUE]);
   //Serial.print(" Green: "); Serial.print(sensorValues[AS726x_GREEN]);
   //Serial.print(" Yellow: "); Serial.print(sensorValues[AS726x_YELLOW]);
   Serial.print(" Orange: "); Serial.print(sensorValues[AS726x_ORANGE]);
   //Serial.print(" Red: "); Serial.print(sensorValues[AS726x_RED]);
   Serial.println();
   Serial.println();
   cont++;
  } while(cont < numReads); 

   average2 = sum/(numReads*numReads);
   Serial.print(" Orange Light Average Before Bubbling = "); Serial.print(average2);  
   Serial.println();
   cont = 0;
   sum = 0;

  do {
    button.loop();
  } while (!button.isReleased());
  Serial.println();
  Serial.println("PRESS THE BUTTON AGAIN TO MEASURE THE LIGHT VALUE AFTER BUBBLING WITH OZONE ...");
  Serial.println();

  //TERCEIRA PARTE DO CÓDIGO
  do {
    button.loop();
  } while (!button.isPressed());

  //begin and make sure we can talk to the sensor
  if(!ams.begin()){
    Serial.println("could not connect to sensor! Please check your wiring.");
    while(1);
  }

  do {
   //read the device temperature
   uint8_t temp = ams.readTemperature();
  
   //ams.drvOn(); //uncomment this if you want to use the driver LED for readings
   ams.startMeasurement(); //begin a measurement
  
   //wait till data is available
   bool rdy = false;
   while(!rdy){
     delay(1000);
     rdy = ams.dataReady();
   }
   //ams.drvOff(); //uncomment this if you want to use the driver LED for readings

   //read the values
   ams.readRawValues(sensorValues);
   //ams.readCalibratedValues(calibratedValues);

   for (int l = 0; l < numReads; l++){
    sum += sensorValues[AS726x_ORANGE];
   }

   Serial.print(" Temp: "); Serial.print(temp);
   //Serial.print(" Violet: "); Serial.print(sensorValues[AS726x_VIOLET]);
   //Serial.print(" Blue: "); Serial.print(sensorValues[AS726x_BLUE]);
   //Serial.print(" Green: "); Serial.print(sensorValues[AS726x_GREEN]);
   //Serial.print(" Yellow: "); Serial.print(sensorValues[AS726x_YELLOW]);
   Serial.print(" Orange: "); Serial.print(sensorValues[AS726x_ORANGE]);
   //Serial.print(" Red: "); Serial.print(sensorValues[AS726x_RED]);
   Serial.println();
   Serial.println();
   cont++;
  } while(cont < numReads); 

   average3 = sum/(numReads*numReads);
   Serial.print(" Orange Light Average After Bubbling = "); Serial.print(average3);  
   Serial.println();
   cont = 0;
   sum = 0;

   //CALCULOS FEITOS - ARRUMAR ISSO DEPOIS !!!
   conc = (-log10((average2-average3)/y0)-lrCoef[1])/lrCoef[0];
   Serial.print(" Ozone Conc = "); Serial.print(conc);

}

void simpLinReg(float* x, float* y, float* lrCoef, int n){
 // CALCULOS PARA REGRESSÃO LINEAR
 for (int k = 0; k < n; k++){
  sum_x += x[k];
  sum_y += y[k];
  sum_xy = sum_xy+x[k]*y[k];
  sum_xx = sum_xx+x[k]*x[k];
 }
 lrCoef[0] = (n*sum_xy-sum_x*sum_y)/(n*sum_xx-sum_x*sum_x);
 lrCoef[1] = (sum_y/n)-((lrCoef[0]*sum_x)/n);
}

void loop() {
}
